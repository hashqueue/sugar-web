user root;
worker_processes auto;
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex on; # set to 'on' if nginx worker_processes > 1
    use epoll;
    # 'use epoll;' to enable for Linux 2.6+
    # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    # 开启gzip 压缩功能，目的：提高效率，节约带宽
    gzip  on;
    # 低于1kb的资源不压缩
    gzip_min_length 1k;
    # 定义压缩级别（压缩比，文件越大，压缩越多，但是cpu使用会越多）
    gzip_comp_level 6;
    # 定义压缩文件类型
    gzip_types text/plain text/css text/xml application/javascript text/javascript;
    # 是否传输gzip压缩标志
    gzip_vary on;

    upstream api.sugar.server {
        # 负载均衡
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response

        # for UNIX domain socket setups
        # server unix:/tmp/gunicorn.sock fail_timeout=0;

        # for a TCP configuration
        server backend:8000 fail_timeout=0;
    }

    # 日志
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    # 文件扩展名与类型映射表
    include       /etc/nginx/mime.types;
    # 默认文件类型
    default_type  application/octet-stream;
    # 开启高效传输模式
    sendfile        on;
    # body中可以携带文件大小，设置0为不限制
    client_max_body_size 0;
    # 超时时间，单位秒
    keepalive_timeout 180;

    server {
        # use 'listen 80 deferred;' for Linux
        # use 'listen 80 accept_filter=httpready;' for FreeBSD
        listen 80 deferred;

        # set the correct host(s) for your site
        server_name 127.0.0.1;
        charset utf-8;

        location / {
            root  /app;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /api {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            # 设置代理服务器的协议和地址
            proxy_pass http://api.sugar.server;
        }

        location /ws {
            # 设置代理服务器的协议和地址
            proxy_pass http://api.sugar.server;

            # websocket接口配置
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
        }

        location /admin {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_redirect off;
            # 设置代理服务器的协议和地址
            proxy_pass http://api.sugar.server;
        }

        # 后端用户媒体资源文件
        location /media {
            alias /app/static/media;
        }

        # 后端静态资源
        location /static{
            alias /app/static;
        }

        # 前端静态资源
        location /assets{
            alias /app/assets;
        }
    }
}
